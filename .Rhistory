#get the gas storage series and IDs
subs<-data_fetch(KEY,cat=1709237)
series_ids<-subs$Series_IDs$series_id[]
names<-t(subs$Series_IDs$name[])
cat_store[[3]]<-series_ids
name_store[[3]]<-names
#stack all of them
series<-data.frame(do.call(c,cat_store))
name_list<-do.call(c,name_store)
#fetchez le data
all_data<- pdfetch_EIA(t(series),KEY)
all_data<-data.frame(date=index(all_data), coredata(all_data))
#fix the data names list
name_list<- gsub("\\.", " ", name_list)
name_list<- gsub("\\U S ", "US", name_list)
name_list<- gsub("  ", " ", name_list)
name_list<- gsub(", Weekly", "", name_list)
name_list<- gsub("US ", "", name_list)
name_list<- gsub("U S ", "", name_list)
name_list<- gsub("^\\s+|\\s+$", "",name_list)
#assign names
all_data <- setNames(all_data,c("date",name_list))
#build week and year indicators
all_data<-all_data%>% mutate(
week=week(date),
month=month(date),
year=year(date)
)
#first, build a list of series names we want to access
#get the information from the EIA weekly supply API
cat_store <- list()
name_store<-list()
subs<-data_fetch(KEY,cat=235081)
#take out the 4 week average data
series_ids<-subs$Series_IDs$series_id[-grep("\\b.4\\b",subs$Series_IDs$series_id)]
#make sure series ids aren't stored as factors
series_ids<- as.character(series_ids)
#same for names
names<-t(subs$Series_IDs$name[-grep("\\b.4\\b",subs$Series_IDs$series_id)])
cat_store[[1]]<-series_ids
name_store[[1]]<-names
#get the Cushing series ids and names
subs<-data_fetch(KEY,cat=235418)
series_ids<-subs$Series_IDs$series_id[]
names<-t(subs$Series_IDs$name[])
cat_store[[2]]<-series_ids
name_store[[2]]<-names
#get the gas storage series and IDs
subs<-data_fetch(KEY,cat=1709237)
series_ids<-subs$Series_IDs$series_id[]
names<-t(subs$Series_IDs$name[])
cat_store[[3]]<-series_ids
name_store[[3]]<-names
#stack all of them
series<-data.frame(do.call(c,cat_store))
name_list<-do.call(c,name_store)
#fetchez le data
all_data<- pdfetch_EIA(t(series),KEY)
all_data<-data.frame(date=index(all_data), coredata(all_data))
#fix the data names list
name_list<- gsub("\\.", " ", name_list)
name_list<- gsub("\\U S ", "US", name_list)
name_list<- gsub("  ", " ", name_list)
name_list<- gsub(", Weekly", "", name_list)
name_list<- gsub("US ", "", name_list)
name_list<- gsub("U S ", "", name_list)
name_list<- gsub("^\\s+|\\s+$", "",name_list)
#assign names
all_data <- setNames(all_data,c("date",name_list))
#build week and year indicators
all_data<-all_data%>% mutate(
week=week(date),
month=month(date),
year=year(date)
)
ribbon_graph<-function(data_sent,series_name,unit_sent,years,alt_axis=FALSE){
#melt the data into long form
df1<-melt(data_sent,id=c("date","week","month","year"),measure.vars = series_name)
#remove NAs
df1<-na.omit(df1)
#truncate to 52 weeks for the years where there is a 53rd week.
df1$week[df1$week==53]<-52
#create range data
max_year<-max(df1$year)
#first, we want the ones we are going to graph - this year and last year
df.years <- df1 %>%
filter(year >= max_year-1)
#now we want the ones for the range
df.year.range <- df1 %>%
filter(year >= max_year - years & year < max_year) %>%
group_by(week) %>%
summarize(mean = mean(value), min = min(value), max = max(value))
y_lab<-paste(alt_axis,"\n(",unit_sent,")",sep="")
if(alt_axis==FALSE)
y_lab<-paste(series_name,"\n(",unit_sent,")",sep="")
#We can then trick ggplot into printing a nice title for the fill on the legend, by setting fill inside aes to the intended string. Because fill is set in aes(), we control its color with scale_fill_manual.
graph<- ggplot() +
geom_ribbon(data = df.year.range, aes(x = week, ymin = min, ymax = max, fill =  "fill1")) +
geom_line(data = df.year.range, aes(x = week, y = mean,colour="3"),size=1.7) +
geom_line(data = subset(df.years,year==max_year-1), aes(x = week, y = value, color = "2"),size=1.7)+
geom_line(data = subset(df.years,year==max_year), aes(x = week, y = value, color = "1"),size=1.7) +
geom_point(data = subset(df.years,year==max_year), aes(x = week, y = value, color = "1"),size=1.7) +
#scale_fill_manual(values = '#ffccff')
scale_fill_manual("",values = 'grey70',labels=paste(max_year-years,"-",max_year-1,"\nrange",sep =""))+
scale_color_viridis("",discrete=TRUE,option="C",labels=c(max_year, max_year-1,paste(max_year-years,"-",max_year-1,"\naverage",sep ="")))+
#scale_fill_continuous()+
scale_x_continuous(limits=c(min(df1$week),max(df1$week)),expand=c(.001,0))+
theme_minimal()+
theme(
legend.position = "bottom",
legend.margin=margin(c(0,0,0,0),unit="cm"),
legend.text = element_text(colour="black", size = 12),
plot.caption = element_text(size = 14, face = "italic"),
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(size = 14, face = "italic"),
#panel.grid.minor = element_blank(),
text = element_text(size = 14,face = "bold"),
axis.line = element_line(color="black", size = 1),
axis.text.y =element_text(size = 14,face = "bold", colour="black"),
axis.text.x=element_text(size = 14,face = "bold", colour="black",angle=90, hjust=1),
)+
labs(y=y_lab,x="Week",
title=paste(series_name,sep=""),
caption="Source: EIA API, graph by Andrew Leach.")
print(graph)
}
ribbon_graph(all_data,"Field Production of Crude Oil","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Imports of Crude Oil","Thousands of Barrels per Day",10)
ribbon_graph(all_data,"Exports of Crude Oil","Thousands of Barrels per Day",10)
ribbon_graph(all_data,"Net Imports of Crude Oil","Thousands of Barrels per Day",10)
ribbon_graph(all_data,"Imports of Total Petroleum Products","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Net Imports of Crude Oil and Petroleum Products","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Imports of Finished Motor Gasoline","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Exports of Finished Motor Gasoline","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Imports of Distillate Fuel Oil","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Exports of Total Distillate","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Imports of Kerosene-Type Jet Fuel","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Exports of Kerosene-Type Jet Fuel","Thousands of Barrels per Day",5)
ribbon_graph(all_data,"Ending Stocks of Crude Oil","Thousands of Barrels",5)
#first, build a list of series names we want to access
#get the information from the EIA weekly supply API
cat_store <- list()
name_store<-list()
subs<-data_fetch(KEY,cat=235081)
#packages used
library(RColorBrewer)
library(viridis)
library(scales)
library(pdfetch)
library(tidyverse)
library(lubridate)
library(reshape2)
library(knitr)
library(prettydoc)
library(xml2)
library(zoo)
library(openxlsx)
library(readxl)
data_fetch<-function(key, cat){
#key<-KEY
#cat=476336
ifelse(cat==999999999,
url <- paste("https://api.eia.gov/category/?api_key=",
key, "&out=xml", sep="" ),
url <- paste("https://api.eia.gov/category/?api_key=",
key, "&category_id=", cat, "&out=xml", sep="" )
)
#http://api.eia.gov/category/?api_key=YOUR_API_KEY_HERE&category_id=476336
#url <- paste("https://api.eia.gov/category?api_key=",
#             key, "&category_id=", cat, "&out=xml", sep="" )
#https://api.eia.gov/category/?api_key=91b4dca0b858df64a2279d82f71af240&category_id=476336&out=xml
#https://api.eia.gov/category?api_key=91b4dca0b858df64a2279d82f71af240&category_id=476336&out=xml
x <- read_xml(url)
doc <- XML::xmlParse(file=x)
Parent_Category <- tryCatch(XML::xmlToDataFrame(,stringsAsFactors = F,nodes =
XML::getNodeSet(doc, "//category/parent_category_id")),
warning=function(w) FALSE, error=function(w) FALSE)
Sub_Categories <- XML::xmlToDataFrame(,stringsAsFactors = F,nodes =
XML::getNodeSet(doc, "//childcategories/row"))
Series_IDs <- XML::xmlToDataFrame(nodes =
XML::getNodeSet(doc, "///childseries/row"),stringsAsFactors = F)
Categories <- list(Parent_Category, Sub_Categories, Series_IDs)
names(Categories) <- c("Parent_Category", "Sub_Categories", "Series_IDs")
Categories
}
get_children<-function(category_id=476336){
subs<-data_fetch(KEY,cat=category_id)
sub_cats<-subs$Sub_Categories
#build list from sub_cats
cat_store <- list()
cat_count<-1
for (cat in sub_cats$category_id) {
#cat<-sub_cats$category_id[1]
series<-data_fetch(KEY,cat=cat)
cat_store[[cat_count]]<-series$Series_IDs
cat_count<-cat_count+1
}
data.frame(do.call(rbind,cat_store))
}
#get_children()
get_series<-function(category_id=476336){
#series,name,f,units,updated
subs<-data_fetch(KEY,cat=category_id)
subs$Series_IDs
}
#get_series()
pd_fix<-function(data,name){
data<-data.frame(date=index(data), coredata(data))
data$date<-ymd(data$date)
data <- setNames(data, c("date",name))
}
EIA_to_DF<-function(series_info){
data<- pdfetch_EIA(series_info$series_id,KEY)
pd_fix(data,series_info$name)
}
#AEO Gas trade
export_set<-c("Exports : Pipeline Exports to Canada",
"Exports : Pipeline Exports to Mexico",
"Exports : Liquefied Natural Gas Exports")
import_set<-c("Imports : Pipeline Imports from Canada",
"Imports : Pipeline Imports from Mexico",
"Imports : Liquefied Natural Gas Imports")
#imports by data_series
#http://api.eia.gov/category/?api_key=YOUR_API_KEY_HERE&category_id=476336
import_series<-get_children(476336)
import_series<-filter(import_series,grepl("U.S. Natural Gas Pipeline Imports From",name)|grepl("U.S. Liquefied Natural Gas Imports,",name),!grepl("Price",name),!grepl("Annual",name))
#exports by data series
#http://api.eia.gov/category/?api_key=YOUR_API_KEY_HERE&category_id=476803
export_series<-get_children(476802)
export_series<-filter(export_series,grepl("U.S. Natural Gas Pipeline Exports to",name)|grepl("Liquefied U.S. Natural Gas Exports,",name),!grepl("Price",name),!grepl("Annual",name))
gas_trade<-rbind(import_series,export_series)
gas_trade_data<-EIA_to_DF(gas_trade)
#reset to match AEO Names
names(gas_trade_data)<-c("date",
"Imports : Pipeline Imports from Canada",
"Imports : Pipeline Imports from Mexico",
"Imports : Liquefied Natural Gas Imports",
"Exports : Pipeline Exports to Canada",
"Exports : Pipeline Exports to Mexico",
"Exports : Liquefied Natural Gas Exports")
#gas_trade_data$`Imports : Pipeline Imports`<-gas_trade_data$`Imports : Pipeline Imports from Canada`+gas_trade_data$`Imports : Pipeline Imports from Mexico`
#gas_trade_data$`Exports : Pipeline Exports`<-gas_trade_data$`Exports : Pipeline Exports to Canada`+gas_trade_data$`Exports : Pipeline Exports to Mexico`
#gas_trade_data$`Pipeline Net Imports`<-gas_trade_data$`Imports : Pipeline Imports`- gas_trade_data$`Exports : Pipeline Exports`
#gas_trade_data$`Liquefied Natural Gas Net Imports`<-gas_trade_data$`Imports : Liquefied Natural Gas Imports` - gas_trade_data$`Exports : Liquefied Natural Gas Exports`
gas_trade_data<-gas_trade_data %>% pivot_longer(-date,names_to ="series")
#make it annual
gas_trade_data<-gas_trade_data %>% mutate(year=year(date)) %>% group_by(year,series) %>%
summarise(value=12*mean(value,na.rm = T)) %>% ungroup %>% #now annual values based on mean non-na month
mutate(date=ymd(paste(year,12,31,sep = "-")),year=NULL)
#adjust to TCF per year
gas_trade_data$value<-gas_trade_data$value/10^6
history_dates<-tibble(date=unique(gas_trade_data$date))
gas_trade_data<-gas_trade_data %>% filter(series %in% import_set | series %in% export_set) %>%
mutate(value=ifelse(series %in% import_set,-1*value,value))
#build AEO list
subs<-data_fetch(KEY,cat=3162260)
#AEO_data$test<-"SUP_IMP_LIQ_NA_NG_NA_NA_TRLCF.A"
AEO_data<-subs$Series_IDs
AEO_data<-NULL
for(j in seq(2014,2019)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2019",j,work_data$series_id)
work_data$name<-gsub("2019",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
#get the 2022 defns
subs<-data_fetch(KEY,cat=4442481)
subs<-data_fetch(KEY,cat=3162260)
subs<-data_fetch(KEY,cat=4442481)
subs<-data_fetch(KEY,cat=3162260)
View(subs)
subs<-data_fetch(KEY,cat=3162260)
#AEO_data$test<-"SUP_IMP_LIQ_NA_NG_NA_NA_TRLCF.A"
AEO_data<-subs$Series_IDs
AEO_data<-NULL
for(j in seq(2014,2022)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2019",j,work_data$series_id)
work_data$name<-gsub("2019",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
View(subs)
AEO_data$name<-gsub("Natural Gas : Volumes : ","",AEO_data$name)
View(AEO_data)
test<- pdfetch_EIA(AEO_data$series_id,KEY)
series_data<-data.frame(date=index(test), coredata(test))
series_data$date<-ymd(series_data$date)
series_data <- setNames(series_data, c("date",AEO_data$name))
View(series_data)
suppressMessages(series_data <-series_data %>% full_join(history_dates))#include the dates for which we have history. They will be NA now, but we'll stack them in later
#melt it
series_data<-series_data %>% pivot_longer(-c(date),names_to="variable") #%>% na.omit()
#series_data$`Pipeline Net Imports`<-series_data$`Imports : Pipeline Imports`- gas_trade_data$`Exports : Pipeline Exports`
#series_data$`Liquefied Natural Gas Net Imports`<-gas_trade_data$`Imports : Liquefied Natural Gas Imports` - gas_trade_data$`Exports : Liquefied Natural Gas Exports`
#get the year for each
name_split<-do.call(rbind,strsplit(as.character(series_data$variable),", "))
series_data$series<-name_split[,1]
#series_data$case<-name_split[,2]
series_data$aeo_year<-name_split[,3]
suppressMessages(joint_data<-series_data%>%filter(year(date)>=2000)%>%left_join(gas_trade_data%>%rename(history=value)))
joint_data<-joint_data %>% filter(series %in% import_set | series %in% export_set) %>%
mutate(value=ifelse(series %in% import_set,-1*value,value),
#history=ifelse(series %in% import_set,-1*history,history)
NULL)
#strip out history after forecast date
joint_data<-joint_data %>%
mutate(year=as.numeric(gsub("AEO","",aeo_year)),
history=ifelse(year(date)<as.numeric(gsub("AEO","",aeo_year)),history,NA),
series=gsub("Exports : ","",series),
series=gsub("Imports : ","",series),
series=factor(series,levels=c("Liquefied Natural Gas Exports", "Pipeline Exports to Canada",  "Pipeline Exports to Mexico",
"Liquefied Natural Gas Imports", "Pipeline Imports from Canada" ,"Pipeline Imports from Mexico" ))
)
gas_trade_plot<-ggplot(joint_data)+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)+
facet_wrap(~aeo_year,nrow = 1)+
scale_y_continuous(breaks=pretty_breaks(),expand=c(0,0))+
scale_x_date(breaks=pretty_breaks(n=5),expand=c(0,0))+
#scale_color_viridis("",discrete = T,option="A",direction = -1,end = .9)+
scale_fill_viridis("",discrete = T,option="A",direction = -1,end = .9)+
scale_size_manual("",values=c(1,1.5))+
scale_linetype_manual("",values=c("solid"))+
expand_limits(x=ymd("1999-10-01"))+
theme_minimal()+weekly_graphs()+
theme(axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)))+
theme(axis.text.x = element_text(angle=90,hjust = 0.5,vjust = 0.5))+
guides(linetype=guide_legend(order = 1,keywidth = unit(1.6,"cm")),
size="none",
#shape = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
#linetype = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2),
#colour = guide_legend(keywidth = unit(1.6,"cm"),override.aes = list(lty = "11")  ,nrow = 2),
fill = guide_legend(keywidth = unit(1,"cm"),nrow = 2,byrow = TRUE),
#fill = guide_legend(keywidth = unit(1.6,"cm"),nrow = 2)
NULL)+
labs(y=paste("Annual Net Outflows (TCF)",sep=""),x="",
title=paste("EIA Annual Energy Outlook Natural Gas Trade Projections"),
subtitle=paste("Historical data up to forecast date in darker shade, forecasts shown with more transparency"),
caption="Source: Data via EIA, graph by Andrew Leach.")
gas_trade_plot
series_data<-data.frame(date=index(test), coredata(test))
series_data$date<-ymd(series_data$date)
series_data <- setNames(series_data, c("date",AEO_data$name))
View(series_data)
suppressMessages(series_data <-series_data %>% full_join(history_dates))#include the dates for which we have history. They will be NA now, but we'll stack them in later
#melt it
series_data<-series_data %>% pivot_longer(-c(date),names_to="variable") #%>% na.omit()
#series_data$`Pipeline Net Imports`<-series_data$`Imports : Pipeline Imports`- gas_trade_data$`Exports : Pipeline Exports`
#series_data$`Liquefied Natural Gas Net Imports`<-gas_trade_data$`Imports : Liquefied Natural Gas Imports` - gas_trade_data$`Exports : Liquefied Natural Gas Exports`
#get the year for each
name_split<-do.call(rbind,strsplit(as.character(series_data$variable),", "))
series_data$series<-name_split[,1]
#series_data$case<-name_split[,2]
series_data$aeo_year<-name_split[,3]
View(series_data)
name_split<-do.call(rbind,strsplit(as.character(series_data$variable),", "))
series_data$series<-name_split[,1]
series_data$aeo_year<-name_split[,3]
View(series_data)
suppressMessages(joint_data<-series_data%>%filter(year(date)>=2000)%>%left_join(gas_trade_data%>%rename(history=value)))
joint_data<-joint_data %>% filter(series %in% import_set | series %in% export_set) %>%
mutate(value=ifelse(series %in% import_set,-1*value,value),
#history=ifelse(series %in% import_set,-1*history,history)
NULL)
#strip out history after forecast date
joint_data<-joint_data %>%
mutate(year=as.numeric(gsub("AEO","",aeo_year)),
history=ifelse(year(date)<as.numeric(gsub("AEO","",aeo_year)),history,NA),
series=gsub("Exports : ","",series),
series=gsub("Imports : ","",series),
series=factor(series,levels=c("Liquefied Natural Gas Exports", "Pipeline Exports to Canada",  "Pipeline Exports to Mexico",
"Liquefied Natural Gas Imports", "Pipeline Imports from Canada" ,"Pipeline Imports from Mexico" ))
)
View(joint_data)
unique(joint_data$variable)
gas_trade_plot<-ggplot(joint_data)+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)+
facet_wrap(~aeo_year,nrow = 1)
gas_trade_plot
gc()
browser()
joint_data%>%filter(variable=="Imports : Liquefied Natural Gas Imports, Reference, AEO2022"
)
testing<-joint_data%>%filter(variable=="Imports : Liquefied Natural Gas Imports, Reference, AEO2022"
)
View(testing)
subs<-data_fetch(KEY,cat=3162260)
#AEO_data$test<-"SUP_IMP_LIQ_NA_NG_NA_NA_TRLCF.A"
AEO_data<-subs$Series_IDs
AEO_data<-NULL
for(j in seq(2014,2022)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2019",j,work_data$series_id)
work_data$name<-gsub("2019",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
AEO_data$name<-gsub("Natural Gas : Volumes : ","",AEO_data$name)
test<- pdfetch_EIA(AEO_data$series_id,KEY)
series_data<-data.frame(date=index(test), coredata(test))
series_data$date<-ymd(series_data$date)
series_data <- setNames(series_data, c("date",AEO_data$name))
suppressMessages(series_data <-series_data %>% full_join(history_dates))#include the dates for which we have history. They will be NA now, but we'll stack them in later
#melt it
series_data<-series_data %>% pivot_longer(-c(date),names_to="variable") #%>% na.omit()
name_split<-do.call(rbind,strsplit(as.character(series_data$variable),", "))
series_data$series<-name_split[,1]
#series_data$case<-name_split[,2]
series_data$aeo_year<-name_split[,3]
suppressMessages(joint_data<-series_data%>%filter(year(date)>=2000)%>%left_join(gas_trade_data%>%rename(history=value)))
joint_data<-joint_data %>% filter(series %in% import_set | series %in% export_set) %>%
mutate(value=ifelse(series %in% import_set,-1*value,value),
#history=ifelse(series %in% import_set,-1*history,history)
NULL)
#strip out history after forecast date
joint_data<-joint_data %>%
mutate(year=as.numeric(gsub("AEO","",aeo_year)),
history=ifelse(year(date)<as.numeric(gsub("AEO","",aeo_year)),history,NA),
series=gsub("Exports : ","",series),
series=gsub("Imports : ","",series),
series=factor(series,levels=c("Liquefied Natural Gas Exports", "Pipeline Exports to Canada",  "Pipeline Exports to Mexico",
"Liquefied Natural Gas Imports", "Pipeline Imports from Canada" ,"Pipeline Imports from Mexico" ))
)
test<-ggplot(joint_data%>%filter(year==2022))+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)
ggplot(joint_data%>%filter(year==2022))+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)+
joint_data%>%filter(year==2022)
ggplot(joint_data%>%filter(year==2022))+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)
test<-joint_data%>%filter(year==2022)
View(test)
subs<-data_fetch(KEY,cat=457710)
subs<-data_fetch(KEY,cat=4577710)
for(j in seq(2020,2022)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2022",j,work_data$series_id)
work_data$name<-gsub("2022",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
View(subs)
subs<-data_fetch(KEY,cat=3162260)
#AEO_data$test<-"SUP_IMP_LIQ_NA_NG_NA_NA_TRLCF.A"
AEO_data<-subs$Series_IDs
AEO_data<-NULL
for(j in seq(2014,2019)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2019",j,work_data$series_id)
work_data$name<-gsub("2019",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
# #get the 2022 defns
#2022 is 4577710
#2021 is 4047706
# 2019 is 3604661
subs<-data_fetch(KEY,cat=4577710)
for(j in seq(2020,2022)){
#print(paste("working on AEO",j,sep=""))
work_data<-subs$Series_IDs
work_data$series_id<-gsub("2022",j,work_data$series_id)
work_data$name<-gsub("2022",j,work_data$name)
AEO_data<-rbind(AEO_data,work_data)
}
AEO_data$name<-gsub("Natural Gas : Volumes : ","",AEO_data$name)
View(AEO_data)
AEO_data$name<-gsub("Natural Gas : Volumes : ","",AEO_data$name)
test<- pdfetch_EIA(AEO_data$series_id,KEY)
series_data<-data.frame(date=index(test), coredata(test))
series_data$date<-ymd(series_data$date)
series_data <- setNames(series_data, c("date",AEO_data$name))
suppressMessages(series_data <-series_data %>% full_join(history_dates))#include the dates for which we have history. They will be NA now, but we'll stack them in later
#melt it
series_data<-series_data %>% pivot_longer(-c(date),names_to="variable") #%>% na.omit()
#series_data$`Pipeline Net Imports`<-series_data$`Imports : Pipeline Imports`- gas_trade_data$`Exports : Pipeline Exports`
#series_data$`Liquefied Natural Gas Net Imports`<-gas_trade_data$`Imports : Liquefied Natural Gas Imports` - gas_trade_data$`Exports : Liquefied Natural Gas Exports`
#get the year for each
name_split<-do.call(rbind,strsplit(as.character(series_data$variable),", "))
series_data$series<-name_split[,1]
#series_data$case<-name_split[,2]
series_data$aeo_year<-name_split[,3]
suppressMessages(joint_data<-series_data%>%filter(year(date)>=2000)%>%left_join(gas_trade_data%>%rename(history=value)))
joint_data<-joint_data %>% filter(series %in% import_set | series %in% export_set) %>%
mutate(value=ifelse(series %in% import_set,-1*value,value),
#history=ifelse(series %in% import_set,-1*history,history)
NULL)
#strip out history after forecast date
joint_data<-joint_data %>%
mutate(year=as.numeric(gsub("AEO","",aeo_year)),
history=ifelse(year(date)<as.numeric(gsub("AEO","",aeo_year)),history,NA),
series=gsub("Exports : ","",series),
series=gsub("Imports : ","",series),
series=factor(series,levels=c("Liquefied Natural Gas Exports", "Pipeline Exports to Canada",  "Pipeline Exports to Mexico",
"Liquefied Natural Gas Imports", "Pipeline Imports from Canada" ,"Pipeline Imports from Mexico" ))
)
test<-joint_data%>%filter(year==2022)
View(test)
gas_trade_plot<-ggplot(joint_data)+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)+
facet_wrap(~aeo_year,nrow = 1)
ggplot(joint_data)+
geom_area(aes(date,value,fill=series),position="stack",alpha=0.6,color="black",size=0.25)+
geom_area(aes(date,history,fill=series),position="stack",color="black",size=0.25)+
facet_wrap(~aeo_year,nrow = 1)
