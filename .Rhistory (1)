require(tidyr)
require(reshape2)
library(openxlsx)
library(ggplot2)
library(lubridate)
library(zoo)
library(ggmap)
library(ggridges)
library(viridis)
library(RColorBrewer)
library(pdfetch)
library(EIAdata)
library(scales)
library(jsonlite)
require(dplyr)
#Mac
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
setwd("/Users/aleach/Google Drive/EIA_data_pulls")
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
setwd("C:/Users/aleach/Google Drive/EIA_data_pulls")
print(getwd())
#Set EIA API Key
KEY <- "91b4dca0b858df64a2279d82f71af240"
## The function is currently defined as
data_fetch<-function(key, cat=2227122){
key <- unlist(strsplit(key, ";"))
ifelse(cat==999999999,
url <- paste("http://api.eia.gov/category?api_key=",
key, "&out=xml", sep="" ),
url <- paste("http://api.eia.gov/category?api_key=",
key, "&category_id=", cat, "&out=xml", sep="" )
)
doc <- xmlParse(file=url, isURL=TRUE)
Parent_Category <- tryCatch(xmlToDataFrame(nodes =
XML::getNodeSet(doc, "//category/parent_category_id")),
warning=function(w) FALSE, error=function(w) FALSE)
Sub_Categories <- xmlToDataFrame(nodes =
XML::getNodeSet(doc, "//childcategories/row"))
Series_IDs <- xmlToDataFrame(nodes =
XML::getNodeSet(doc, "///childseries/row"))
Categories <- list(Parent_Category, Sub_Categories, Series_IDs)
names(Categories) <- c("Parent_Category", "Sub_Categories", "Series_IDs")
return(Categories)
}
set_png<-function(file_sent,w_sent=1400,h_sent=750,res_sent=130){
#MAC
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
png(file=file_sent, width = w_sent, height = h_sent,res=res_sent)
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
png(file=file_sent, width = w_sent, height = h_sent,res=res_sent,type='cairo')
}
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
source("/Users/aleach/Google Drive/tableau.R")
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
source("C:/Users/aleach/Google Drive//tableau.R")
require(tidyr)
require(reshape2)
library(openxlsx)
library(ggplot2)
library(lubridate)
library(zoo)
library(ggmap)
library(ggridges)
library(viridis)
library(RColorBrewer)
library(pdfetch)
library(EIAdata)
library(scales)
library(jsonlite)
require(dplyr)
#Mac
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
setwd("/Users/aleach/Google Drive/EIA_data_pulls")
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
setwd("C:/Users/aleach/Google Drive/EIA_data_pulls")
print(getwd())
#Set EIA API Key
KEY <- "91b4dca0b858df64a2279d82f71af240"
## The function is currently defined as
data_fetch<-function(key, cat=2227122){
key <- unlist(strsplit(key, ";"))
ifelse(cat==999999999,
url <- paste("http://api.eia.gov/category?api_key=",
key, "&out=xml", sep="" ),
url <- paste("http://api.eia.gov/category?api_key=",
key, "&category_id=", cat, "&out=xml", sep="" )
)
doc <- xmlParse(file=url, isURL=TRUE)
Parent_Category <- tryCatch(xmlToDataFrame(nodes =
XML::getNodeSet(doc, "//category/parent_category_id")),
warning=function(w) FALSE, error=function(w) FALSE)
Sub_Categories <- xmlToDataFrame(nodes =
XML::getNodeSet(doc, "//childcategories/row"))
Series_IDs <- xmlToDataFrame(nodes =
XML::getNodeSet(doc, "///childseries/row"))
Categories <- list(Parent_Category, Sub_Categories, Series_IDs)
names(Categories) <- c("Parent_Category", "Sub_Categories", "Series_IDs")
return(Categories)
}
set_png<-function(file_sent,w_sent=1400,h_sent=750,res_sent=130){
#MAC
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
png(file=file_sent, width = w_sent, height = h_sent,res=res_sent)
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
png(file=file_sent, width = w_sent, height = h_sent,res=res_sent,type='cairo')
}
if(R.version$platform ==  "x86_64-apple-darwin15.6.0")
source("/Users/aleach/Google Drive/tableau.R")
#PC
if(R.version$platform ==  "x86_64-w64-mingw32")
source("C:/Users/aleach/Google Drive//tableau.R")
require(tidyr)
installed.packages()
